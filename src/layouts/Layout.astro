---
import "../styles/index.scss";
import "../styles/fonts.scss";

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div class="cursor-point"></div>
		<div class="cursor-aura"></div>

		<slot />
		
		<script>
			const cursorPoint: HTMLDivElement | null = document.querySelector(".cursor-point");
			const cursorAura: HTMLDivElement | null = document.querySelector(".cursor-aura");

			const pointerables = document.querySelectorAll(".pointerable");

			pointerables.forEach((pointerable) => {
				pointerable.addEventListener("mouseenter", () => {
					cursorAura?.classList.add("cursor-aura--pointer");
					cursorPoint?.classList.add("cursor-point--pointer");
				});

				pointerable.addEventListener("mouseleave", () => {
					cursorAura?.classList.remove("cursor-aura--pointer");
					cursorPoint?.classList.remove("cursor-point--pointer");
				});
			});

			const moveMouse = (e: MouseEvent) => {
				if (cursorPoint && cursorAura) {
					cursorPoint.style.transform = `translate3d(${e.clientX}px, ${e.clientY}px, 0)`;
					cursorAura.style.transform = `translate3d(${e.clientX - 10}px, ${e.clientY - 10}px, 0)`;
				}
			};

			document.addEventListener("mousemove", moveMouse);
		</script>
	</body>
</html>
